{"ast":null,"code":"var _jsxFileName = \"/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/JournalPage.js\";\nimport React from \"react\";\nimport { Col, Row, Button, Dropdown, ButtonGroup, Card, ListGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp, faChartArea, faChartBar, faChartLine, faFlagUsa, faFolderOpen, faGlobeEurope, faPaperclip, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/JournalPage.css';\nimport { useEffect, useState } from 'react';\nexport default function JournalPage() {\n  const [journalEntries, setJournalEntries] = useState([]);\n  const [dashboardElem, setDashboardElem] = useState(null);\n\n  let oppContent = props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, props.opp[\"opportunity_name\"]), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: props.email.includes(\"@gmail.com\") ? `https://mail.google.com/mail/?view=cm&fs=1&to=hello@lanos.io&su=Question+About+${props.opp[\"opportunity_name\"]}` : \"mailto:hello@lanos.io\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 21\n    }\n  }, \"Contact Us\")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 25\n    }\n  }, \"Date Posted: \"), props, /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 25\n    }\n  }, \"When: \"), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"b\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 25\n    }\n  }, \"Location: \"), props))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  })));\n\n  useEffect(async () => {\n    if (journalEntries.length == 0) {\n      await fetch(`https://us-east-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/vetassist-gazyj/service/getJournalEntries/incoming_webhook/getJournalEntries?user_id=dummy`).then(response => response.json()).then(result => {\n        console.log(result);\n        setJournalEntries(result); // setDashboardElem(opportunityNamesDB[0])\n      });\n    }\n  }, []); // const listItems = journalEntries.map((opp, index) =>\n  //     <ListGroup.Item href={\"#link\"+index} className=\"listitem\" onClick={(e) => openDashboard(e,index)}>\n  //         {/* {journalEntry.title} */}\n  //     </ListGroup.Item>\n  // );\n\n  let openDashboard = (e, index) => {\n    e.preventDefault();\n    setDashboardElem(journalEntries[index]);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"light\",\n    className: \"shadow-sm \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 33\n    }\n  }, \"Previous Journals\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"listitem\",\n    flush: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Entry 12: 3/13/21\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"listitem\",\n    flush: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }, \"Entry 11: 3/12/21\")))), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"light\",\n    className: \"shadow-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, \"Selected\"), /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }))))));\n}","map":{"version":3,"sources":["/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/JournalPage.js"],"names":["React","Col","Row","Button","Dropdown","ButtonGroup","Card","ListGroup","FontAwesomeIcon","faAngleDown","faAngleUp","faChartArea","faChartBar","faChartLine","faFlagUsa","faFolderOpen","faGlobeEurope","faPaperclip","faUserPlus","useEffect","useState","JournalPage","journalEntries","setJournalEntries","dashboardElem","setDashboardElem","oppContent","props","opp","email","includes","length","fetch","then","response","json","result","console","log","openDashboard","e","index","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Row, Button, Dropdown, ButtonGroup, Card, ListGroup} from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp, faChartArea, faChartBar, faChartLine, faFlagUsa, faFolderOpen, faGlobeEurope, faPaperclip, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/JournalPage.css'\nimport {useEffect, useState} from 'react'\n\n\n\n\nexport default function JournalPage(){\nconst [journalEntries, setJournalEntries] = useState([])\nconst [dashboardElem, setDashboardElem] = useState(null)\n\nlet oppContent = (props) => (\n        <>\n            <Row>\n                <Col>\n                    <h1>{props.opp[\"opportunity_name\"]}</h1>\n                    <Button variant=\"primary\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.email.includes(\"@gmail.com\") ? `https://mail.google.com/mail/?view=cm&fs=1&to=hello@lanos.io&su=Question+About+${props.opp[\"opportunity_name\"]}` :\"mailto:hello@lanos.io\"}>Contact Us</Button>\n                </Col>\n                <Col>\n                    <p>\n                        <b>Date Posted: </b>{props}\n                        <br/>\n                        <b>When: </b>\n                        <br/>\n                        <b>Location: </b>{props}\n                    </p>\n                </Col>\n                \n            </Row>\n            <hr/>\n            <Row>\n                <Col>\n                </Col>\n            </Row>\n        </>\n    )\n\nuseEffect(async () => {\n    if( journalEntries.length == 0){\n    await fetch(`https://us-east-1.aws.webhooks.mongodb-realm.com/api/client/v2.0/app/vetassist-gazyj/service/getJournalEntries/incoming_webhook/getJournalEntries?user_id=dummy`)\n    .then(response => response.json())\n    .then(result => {\n        console.log(result)\n        setJournalEntries(result)\n        // setDashboardElem(opportunityNamesDB[0])\n    }\n    )\n}\n},[])\n\n// const listItems = journalEntries.map((opp, index) =>\n//     <ListGroup.Item href={\"#link\"+index} className=\"listitem\" onClick={(e) => openDashboard(e,index)}>\n//         {/* {journalEntry.title} */}\n//     </ListGroup.Item>\n// );\n\nlet openDashboard = (e, index) => {\n    e.preventDefault()\n    setDashboardElem(journalEntries[index]) \n\n}\n\n\n\n    return(\n        <>\n            <Row className=\"\">\n                <Col sm={4} className=\"\">\n                    <Card border=\"light\" className=\"shadow-sm \">\n                        <Card.Body>\n                                <h3>Previous Journals</h3>\n                                <ListGroup.Item className=\"listitem\" flush>\n                                    Entry 12: 3/13/21\n                                </ListGroup.Item>\n                                <ListGroup.Item className=\"listitem\" flush>\n                                    Entry 11: 3/12/21\n                                </ListGroup.Item>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={8} className=\"\">\n                    <Card border=\"light\" className=\"shadow-sm\">\n                        <Card.Body>\n                                <h3>Selected</h3>\n                                <ListGroup variant=\"flush\">\n\n                                </ListGroup>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n\n}"]},"metadata":{},"sourceType":"module"}