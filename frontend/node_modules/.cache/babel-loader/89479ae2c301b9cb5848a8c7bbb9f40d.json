{"ast":null,"code":"var _jsxFileName = \"/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/HomePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Routes } from \"../routes\"; // pages\n\nimport Presentation from \"./Presentation\";\nimport Upgrade from \"./Upgrade\";\nimport DashboardOverview from \"./dashboard/DashboardOverview\";\nimport Transactions from \"./Transactions\";\nimport Settings from \"./Settings\";\nimport BootstrapTables from \"./tables/BootstrapTables\";\nimport Signin from \"./examples/Signin\";\nimport Signup from \"./examples/Signup\";\nimport ForgotPassword from \"./examples/ForgotPassword\";\nimport ResetPassword from \"./examples/ResetPassword\";\nimport Lock from \"./examples/Lock\";\nimport NotFoundPage from \"./examples/NotFound\";\nimport ServerError from \"./examples/ServerError\"; // components\n\nimport Sidebar from \"../components/Sidebar\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport Preloader from \"../components/Preloader\";\nimport Accordion from \"./components/Accordion\";\nimport Alerts from \"./components/Alerts\";\nimport Badges from \"./components/Badges\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport Buttons from \"./components/Buttons\";\nimport Forms from \"./components/Forms\";\nimport Modals from \"./components/Modals\";\nimport Navs from \"./components/Navs\";\nimport Navbars from \"./components/Navbars\";\nimport Pagination from \"./components/Pagination\";\nimport Popovers from \"./components/Popovers\";\nimport Progress from \"./components/Progress\";\nimport Tables from \"./components/Tables\";\nimport Tabs from \"./components/Tabs\";\nimport Tooltips from \"./components/Tooltips\";\nimport Toasts from \"./components/Toasts\";\n\nconst RouteWithLoader = ({\n  component: Component,\n  ...rest\n}) => {\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => setLoaded(true), 1000);\n    return () => clearTimeout(timer);\n  }, []);\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(React.Fragment, null, \" \", /*#__PURE__*/React.createElement(Preloader, {\n      show: loaded ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 44\n      }\n    }), \" \", /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 87\n      }\n    })), \" \"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }));\n};\n\nconst RouteWithSidebar = ({\n  component: Component,\n  ...rest\n}) => {\n  const [loaded, setLoaded] = useState(false);\n  useEffect(() => {\n    const timer = setTimeout(() => setLoaded(true), 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const localStorageIsSettingsVisible = () => {\n    return localStorage.getItem('settingsVisible') === 'false' ? false : true;\n  };\n\n  const [showSettings, setShowSettings] = useState(localStorageIsSettingsVisible);\n\n  const toggleSettings = () => {\n    setShowSettings(!showSettings);\n    localStorage.setItem('settingsVisible', !showSettings);\n  };\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Preloader, {\n      show: loaded ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Navbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      toggleSettings: false,\n      showSettings: showSettings,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default (() => /*#__PURE__*/React.createElement(Switch, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.Presentation.path,\n  component: Presentation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.Signin.path,\n  component: Signin,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.Signup.path,\n  component: Signup,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.ForgotPassword.path,\n  component: ForgotPassword,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.ResetPassword.path,\n  component: ResetPassword,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.Lock.path,\n  component: Lock,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.NotFound.path,\n  component: NotFoundPage,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithLoader, {\n  exact: true,\n  path: Routes.ServerError.path,\n  component: ServerError,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithSidebar, {\n  exact: true,\n  path: Routes.DashboardOverview.path,\n  component: DashboardOverview,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithSidebar, {\n  exact: true,\n  path: Routes.Upgrade.path,\n  component: Upgrade,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithSidebar, {\n  exact: true,\n  path: Routes.Settings.path,\n  component: Settings,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(RouteWithSidebar, {\n  exact: true,\n  path: Routes.BootstrapTables.path,\n  component: BootstrapTables,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }\n}), /*#__PURE__*/React.createElement(Redirect, {\n  to: Routes.NotFound.path,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 5\n  }\n})));","map":{"version":3,"sources":["/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/HomePage.js"],"names":["React","useState","useEffect","Route","Switch","Redirect","Routes","Presentation","Upgrade","DashboardOverview","Transactions","Settings","BootstrapTables","Signin","Signup","ForgotPassword","ResetPassword","Lock","NotFoundPage","ServerError","Sidebar","Navbar","Footer","Preloader","Accordion","Alerts","Badges","Breadcrumbs","Buttons","Forms","Modals","Navs","Navbars","Pagination","Popovers","Progress","Tables","Tabs","Tooltips","Toasts","RouteWithLoader","component","Component","rest","loaded","setLoaded","timer","setTimeout","clearTimeout","props","RouteWithSidebar","localStorageIsSettingsVisible","localStorage","getItem","showSettings","setShowSettings","toggleSettings","setItem","path","NotFound"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Routes } from \"../routes\";\n\n// pages\nimport Presentation from \"./Presentation\";\nimport Upgrade from \"./Upgrade\";\nimport DashboardOverview from \"./dashboard/DashboardOverview\";\nimport Transactions from \"./Transactions\";\nimport Settings from \"./Settings\";\nimport BootstrapTables from \"./tables/BootstrapTables\";\nimport Signin from \"./examples/Signin\";\nimport Signup from \"./examples/Signup\";\nimport ForgotPassword from \"./examples/ForgotPassword\";\nimport ResetPassword from \"./examples/ResetPassword\";\nimport Lock from \"./examples/Lock\";\nimport NotFoundPage from \"./examples/NotFound\";\nimport ServerError from \"./examples/ServerError\";\n\n// components\nimport Sidebar from \"../components/Sidebar\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport Preloader from \"../components/Preloader\";\n\nimport Accordion from \"./components/Accordion\";\nimport Alerts from \"./components/Alerts\";\nimport Badges from \"./components/Badges\";\nimport Breadcrumbs from \"./components/Breadcrumbs\";\nimport Buttons from \"./components/Buttons\";\nimport Forms from \"./components/Forms\";\nimport Modals from \"./components/Modals\";\nimport Navs from \"./components/Navs\";\nimport Navbars from \"./components/Navbars\";\nimport Pagination from \"./components/Pagination\";\nimport Popovers from \"./components/Popovers\";\nimport Progress from \"./components/Progress\";\nimport Tables from \"./components/Tables\";\nimport Tabs from \"./components/Tabs\";\nimport Tooltips from \"./components/Tooltips\";\nimport Toasts from \"./components/Toasts\";\n\nconst RouteWithLoader = ({ component: Component, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoaded(true), 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  return (\n    <Route {...rest} render={props => ( <> <Preloader show={loaded ? false : true} /> <Component {...props} /> </> ) } />\n  );\n};\n\nconst RouteWithSidebar = ({ component: Component, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const timer = setTimeout(() => setLoaded(true), 1000);\n    return () => clearTimeout(timer);\n  }, []);\n\n  const localStorageIsSettingsVisible = () => {\n    return localStorage.getItem('settingsVisible') === 'false' ? false : true\n  }\n\n  const [showSettings, setShowSettings] = useState(localStorageIsSettingsVisible);\n\n  const toggleSettings = () => {\n    setShowSettings(!showSettings);\n    localStorage.setItem('settingsVisible', !showSettings);\n  }\n\n  return (\n    <Route {...rest} render={props => (\n      <>\n        <Preloader show={loaded ? false : true} />\n        <Sidebar />\n\n        <main className=\"content\">\n          <Navbar />\n          <Component {...props} />\n          <Footer toggleSettings={false} showSettings={showSettings} />\n        </main>\n      </>\n    )}\n    />\n  );\n};\n\nexport default () => (\n  <Switch>\n    <RouteWithLoader exact path={Routes.Presentation.path} component={Presentation} />\n    <RouteWithLoader exact path={Routes.Signin.path} component={Signin} />\n    <RouteWithLoader exact path={Routes.Signup.path} component={Signup} />\n    <RouteWithLoader exact path={Routes.ForgotPassword.path} component={ForgotPassword} />\n    <RouteWithLoader exact path={Routes.ResetPassword.path} component={ResetPassword} />\n    <RouteWithLoader exact path={Routes.Lock.path} component={Lock} />\n    <RouteWithLoader exact path={Routes.NotFound.path} component={NotFoundPage} />\n    <RouteWithLoader exact path={Routes.ServerError.path} component={ServerError} />\n\n    {/* pages */}\n    <RouteWithSidebar exact path={Routes.DashboardOverview.path} component={DashboardOverview} />\n    <RouteWithSidebar exact path={Routes.Upgrade.path} component={Upgrade} />\n    <RouteWithSidebar exact path={Routes.Settings.path} component={Settings} />\n    <RouteWithSidebar exact path={Routes.BootstrapTables.path} component={BootstrapTables} />\n\n    <Redirect to={Routes.NotFound.path} />\n  </Switch>\n);\n"]},"metadata":{},"sourceType":"module"}