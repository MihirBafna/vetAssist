{"ast":null,"code":"var _jsxFileName = \"/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/components/Forms.js\";\nimport React from 'react';\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Card, Form, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport Documentation from \"../../components/Documentation\";\nexport default (() => {\n  return /*#__PURE__*/React.createElement(\"article\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    className: \"px-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: \"d-block mb-4 mb-md-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"Forms\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"mb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, \"Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\"))), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Example\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, \"Form elements are an important part of the UI to receive text input from the users. The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 104\n      }\n    }, \"<Form>\"), \" component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Input fields with icon\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }, \"You can also add icons to the left or right side of the input field by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 97\n      }\n    }, \"<InputGroup>\"), \" component and using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 157\n      }\n    }, \"<InputGroup.Text>\"), \" element with an icon element inside it, either after or before the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 265\n      }\n    }, \"<Form.Control>\"), \" element.\"),\n    scope: {\n      Form,\n      InputGroup,\n      FontAwesomeIcon,\n      faSearch\n    },\n    imports: `import { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Left</Form.Label>\n    <InputGroup>\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n    </InputGroup>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Right</Form.Label>\n    <InputGroup>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n    </InputGroup>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Validation\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"You can easily update the styles of a valid or invalid styles input field by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 103\n      }\n    }, \"isValid\"), \" or \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 127\n      }\n    }, \"isInvalid\"), \" attributes. Additionally, you can use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 192\n      }\n    }, \"<Form.Control.Feedback>\"), \" component to write the message regarding the success or error message.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control required isInvalid type=\"text\" />\n    <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>First name</Form.Label>\n    <Form.Control required isValid type=\"text\" defaultValue=\"Mark\" />\n    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Select input\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }\n    }, \"The \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 20\n      }\n    }, \"<Form.Select>\"), \" component can be used for option selection from the user. You can use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 131\n      }\n    }, \"<option>\"), \" elements to add multiple options and use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 208\n      }\n    }, \"defaultValue\"), \" attribute to set the default value of the select field.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Select>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Multiple select\",\n    description: \"\",\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Select multiple>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Textarea\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"You can create a textarea input field by adding the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 68\n      }\n    }, \"as=\\\"textarea\\\"\"), \" modifier attribute to the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 121\n      }\n    }, \"<Form.Control>\"), \" component.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Group>\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" />\n  </Form.Group>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"File upload\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"If you want to use an input field to upload files, you need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 87\n      }\n    }, \"type=\\\"file\\\"\"), \" attribute to the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 129\n      }\n    }, \"<Form.Control>\"), \" component.\"),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Control type=\"file\" />\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Checkboxes\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 15\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 26\n      }\n    }, \"<Form.Check>\"), \" component to create checkbox items. If you want to disable on them, you need to add the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 150\n      }\n    }, \"disabled\"), \" attribute.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 15\n      }\n    }, \"Make sure the is a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 37\n      }\n    }, 'id=\"*\"'), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 65\n      }\n    }, 'htmlFor=\"*\"'), \" attribute for each element so that clicking on the text will also toggle the element.\")),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <Form.Check label=\"Default checkbox\" id=\"checkbox1\" htmlFor=\"checkbox1\" />\n  <Form.Check disabled label=\"Disabled checkbox\" id=\"checkbox2\" htmlFor=\"checkbox2\" />\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Radio buttons\",\n    description: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 15\n      }\n    }, \"If you want to use radio buttons, you need to use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 72\n      }\n    }, \"<Form.Check>\"), \" component with the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 127\n      }\n    }, \"type=\\\"radio\\\"\"), \" modifier. You can disable the element by using the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 204\n      }\n    }, \"disabled\"), \" attribute.\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 15\n      }\n    }, \"Make sure the is a \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 37\n      }\n    }, 'id=\"*\"'), \" and \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 65\n      }\n    }, 'htmlFor=\"*\"'), \" attribute for each element so that clicking on the text will also toggle the element.\")),\n    scope: {\n      Form\n    },\n    imports: `import { Form } from '@themesberg/react-bootstrap';`,\n    example: `<Form>\n  <fieldset>\n    <Form.Check\n      defaultChecked\n      type=\"radio\"\n      defaultValue=\"option1\"\n      label=\"Default radio\"\n      name=\"exampleRadios\"\n      id=\"radio1\"\n      htmlFor=\"radio1\"\n      />\n\n    <Form.Check\n      type=\"radio\"\n      defaultValue=\"option2\"\n      label=\"Second default radio\"\n      name=\"exampleRadios\"\n      id=\"radio2\"\n      htmlFor=\"radio2\"\n      />\n\n    <Form.Check\n      disabled\n      type=\"radio\"\n      defaultValue=\"option3\"\n      label=\"Disabled radio\"\n      name=\"exampleRadios\"\n      id=\"radio3\"\n      htmlFor=\"radio3\"\n      />\n  </fieldset>\n</Form>`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Documentation, {\n    title: \"Datepicker\",\n    description: /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 24\n      }\n    }, \"<Datetime>\"), \" component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the \", /*#__PURE__*/React.createElement(Card.Link, {\n      href: \"https://www.npmjs.com/package/react-datetime\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 194\n      }\n    }, \"react-datetime\"), \" documentation.\"),\n    scope: {\n      Datetime,\n      Form,\n      InputGroup,\n      FontAwesomeIcon,\n      faCalendarAlt,\n      moment\n    },\n    imports: `import React, { useState } from \"react\";\nimport { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment-timezone\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";`,\n    example: `const Datepicker = () => {\n  const [birthday, setBirthday] = React.useState(\"\");\n\n  return(\n    <Form>\n      <Form.Group className=\"mb-3\">\n        <Datetime\n          timeFormat={false}\n          closeOnSelect={false}\n          onChange={setBirthday}\n          renderInput={(props, openCalendar) => (\n            <InputGroup>\n              <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\n              <Form.Control\n                required\n                type=\"text\"\n                value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\n                placeholder=\"mm/dd/yyyy\"\n                onFocus={openCalendar}\n                onChange={() => { }} />\n            </InputGroup>\n          )} />\n      </Form.Group>\n    </Form>\n  );\n}\n\nrender( <Datepicker /> )`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  })));\n});","map":{"version":3,"sources":["/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/components/Forms.js"],"names":["React","moment","Datetime","FontAwesomeIcon","faSearch","faCalendarAlt","Col","Row","Card","Form","Container","InputGroup","Documentation"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,mCAAxC;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,6BAA5D;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AAEA,gBAAe,MAAM;AACnB,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AAAG,IAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iHAFF,CADF,CADF,eAUE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gHAA2F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA3F,wLAHJ;AAKE,IAAA,KAAK,EAAE;AAAEH,MAAAA;AAAF,KALT;AAME,IAAA,OAAO,EAAG,qDANZ;AAOE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAhBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eA6BE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,wBADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yGAAoF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAApF,4CAAgJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAAhJ,uFAA4P;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA5P,cAHJ;AAKE,IAAA,KAAK,EAAE;AAAEA,MAAAA,IAAF;AAAQE,MAAAA,UAAR;AAAoBR,MAAAA,eAApB;AAAqCC,MAAAA;AAArC,KALT;AAME,IAAA,OAAO,EAAG;AACpB;AACA,8DARQ;AASE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAxBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7BF,eAwDE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+GAA0F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAA1F,uBAAkH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAlH,8DAAmL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAnL,4EAHJ;AAKE,IAAA,KAAK,EAAE;AAAEK,MAAAA;AAAF,KALT;AAME,IAAA,OAAO,EAAG,qDANZ;AAOE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAlBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAxDF,eA6EE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,cADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP,8FAAsH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAtH,iEAAmM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAnM,6DAHJ;AAKE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KALT;AAME,IAAA,OAAO,EAAG,qDANZ;AAOE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAjBQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA7EF,eAiGE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,iBADR;AAEE,IAAA,WAAW,EAAC,EAFd;AAGE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KAHT;AAIE,IAAA,OAAO,EAAG,qDAJZ;AAKE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAfQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjGF,eAmHE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,UADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4EAAuD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAvD,8CAA4G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA5G,gBAHJ;AAKE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KALT;AAME,IAAA,OAAO,EAAG,qDANZ;AAOE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA,QAZQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnHF,eAkIE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,aADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+FAA0E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA1E,qCAAoH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAApH,gBAHJ;AAKE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KALT;AAME,IAAA,OAAO,EAAG,qDANZ;AAOE,IAAA,OAAO,EAAG;AACpB;AACA,QATQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlIF,eA8IE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,WAAW,eACT,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAX,4GAAuI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAvI,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,QAAP,CAAtB,wBAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,aAAP,CAAlD,2FAFF,CAHJ;AAQE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KART;AASE,IAAA,OAAO,EAAG,qDATZ;AAUE,IAAA,OAAO,EAAG;AACpB;AACA;AACA,QAbQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9IF,eA8JE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,eADR;AAEE,IAAA,WAAW,eACT,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8EAAyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAzD,uCAAgH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAhH,uEAA6L;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA7L,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,QAAP,CAAtB,wBAAkD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,aAAP,CAAlD,2FAFF,CAHJ;AAQE,IAAA,KAAK,EAAE;AAAEA,MAAAA;AAAF,KART;AASE,IAAA,OAAO,EAAG,qDATZ;AAUE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAzCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9JF,eA0ME,oBAAC,aAAD;AACE,IAAA,KAAK,EAAC,YADR;AAEE,IAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAX,4JAAqL,oBAAC,IAAD,CAAM,IAAN;AAAW,MAAA,IAAI,EAAC,8CAAhB;AAA+D,MAAA,MAAM,EAAC,QAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAArL,oBAHJ;AAKE,IAAA,KAAK,EAAE;AAAEP,MAAAA,QAAF;AAAYO,MAAAA,IAAZ;AAAkBE,MAAAA,UAAlB;AAA8BR,MAAAA,eAA9B;AAA+CE,MAAAA,aAA/C;AAA8DJ,MAAAA;AAA9D,KALT;AAME,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA,mEAZQ;AAaE,IAAA,OAAO,EAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAxCQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1MF,CADF,CADF;AA0PD,CA3PD","sourcesContent":["import React from 'react';\nimport moment from \"moment-timezone\";\nimport Datetime from \"react-datetime\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch, faCalendarAlt } from '@fortawesome/free-solid-svg-icons';\nimport { Col, Row, Card, Form, Container, InputGroup } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\n\nexport default () => {\n  return (\n    <article>\n      <Container className=\"px-0\">\n        <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n          <Col className=\"d-block mb-4 mb-md-0\">\n            <h1 className=\"h2\">Forms</h1>\n            <p className=\"mb-0\">\n              Use form elements such as text inputs, textareas, file uploads and many more to get input from you users.\n            </p>\n          </Col>\n        </Row>\n\n        <Documentation\n          title=\"Example\"\n          description={\n            <p>Form elements are an important part of the UI to receive text input from the users. The <code>&#x3C;Form&#x3E;</code> component can be used to create forms, form groups, labels, and input elements inside the UI. Check out the following example for a simple email input field and a textarea field:</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Email address</Form.Label>\n    <Form.Control type=\"email\" placeholder=\"name@example.com\" />\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"3\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Input fields with icon\"\n          description={\n            <p>You can also add icons to the left or right side of the input field by using the <code>&#x3C;InputGroup&#x3E;</code> component and using the <code>&#x3C;InputGroup.Text&#x3E;</code> element with an icon element inside it, either after or before the <code>&#x3C;Form.Control&#x3E;</code> element.</p>\n          }\n          scope={{ Form, InputGroup, FontAwesomeIcon, faSearch }}\n          imports={`import { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Left</Form.Label>\n    <InputGroup>\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n    </InputGroup>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Icon Right</Form.Label>\n    <InputGroup>\n      <Form.Control type=\"text\" placeholder=\"Search\" />\n      <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n    </InputGroup>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Validation\"\n          description={\n            <p>You can easily update the styles of a valid or invalid styles input field by using the <code>isValid</code> or <code>isInvalid</code> attributes. Additionally, you can use the <code>&#x3C;Form.Control.Feedback&#x3E;</code> component to write the message regarding the success or error message.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Username</Form.Label>\n    <Form.Control required isInvalid type=\"text\" />\n    <Form.Control.Feedback type=\"invalid\">Please choose a username.</Form.Control.Feedback>\n  </Form.Group>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>First name</Form.Label>\n    <Form.Control required isValid type=\"text\" defaultValue=\"Mark\" />\n    <Form.Control.Feedback type=\"valid\">Looks good!</Form.Control.Feedback>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Select input\"\n          description={\n            <p>The <code>&#x3C;Form.Select&#x3E;</code> component can be used for option selection from the user. You can use the <code>&#x3C;option&#x3E;</code> elements to add multiple options and use the <code>defaultValue</code> attribute to set the default value of the select field.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example select</Form.Label>\n    <Form.Select>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Multiple select\"\n          description=\"\"\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group className=\"mb-3\">\n    <Form.Label>Example multiple select</Form.Label>\n    <Form.Select multiple>\n      <option defaultValue>Open this select menu</option>\n      <option>One</option>\n      <option>Two</option>\n      <option>Three</option>\n    </Form.Select>\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Textarea\"\n          description={\n            <p>You can create a textarea input field by adding the <code>as=\"textarea\"</code> modifier attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Group>\n    <Form.Label>Example textarea</Form.Label>\n    <Form.Control as=\"textarea\" rows=\"4\" placeholder=\"Enter your message...\" />\n  </Form.Group>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"File upload\"\n          description={\n            <p>If you want to use an input field to upload files, you need to add the <code>type=\"file\"</code> attribute to the <code>&#x3C;Form.Control&#x3E;</code> component.</p>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Control type=\"file\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Checkboxes\"\n          description={\n            <>\n              <p>Use the <code>&#x3C;Form.Check&#x3E;</code> component to create checkbox items. If you want to disable on them, you need to add the <code>disabled</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <Form.Check label=\"Default checkbox\" id=\"checkbox1\" htmlFor=\"checkbox1\" />\n  <Form.Check disabled label=\"Disabled checkbox\" id=\"checkbox2\" htmlFor=\"checkbox2\" />\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Radio buttons\"\n          description={\n            <>\n              <p>If you want to use radio buttons, you need to use the <code>&#x3C;Form.Check&#x3E;</code> component with the <code>type=\"radio\"</code> modifier. You can disable the element by using the <code>disabled</code> attribute.</p>\n              <p>Make sure the is a <code>{'id=\"*\"'}</code> and <code>{'htmlFor=\"*\"'}</code> attribute for each element so that clicking on the text will also toggle the element.</p>\n            </>\n          }\n          scope={{ Form }}\n          imports={`import { Form } from '@themesberg/react-bootstrap';`}\n          example={`<Form>\n  <fieldset>\n    <Form.Check\n      defaultChecked\n      type=\"radio\"\n      defaultValue=\"option1\"\n      label=\"Default radio\"\n      name=\"exampleRadios\"\n      id=\"radio1\"\n      htmlFor=\"radio1\"\n      />\n\n    <Form.Check\n      type=\"radio\"\n      defaultValue=\"option2\"\n      label=\"Second default radio\"\n      name=\"exampleRadios\"\n      id=\"radio2\"\n      htmlFor=\"radio2\"\n      />\n\n    <Form.Check\n      disabled\n      type=\"radio\"\n      defaultValue=\"option3\"\n      label=\"Disabled radio\"\n      name=\"exampleRadios\"\n      id=\"radio3\"\n      htmlFor=\"radio3\"\n      />\n  </fieldset>\n</Form>`}\n        />\n\n        <Documentation\n          title=\"Datepicker\"\n          description={\n            <p>Use the <code>&#x3C;Datetime&#x3E;</code> component to use a datepicker as an input field. You can read more about the options that you can use for this component by reading the <Card.Link href=\"https://www.npmjs.com/package/react-datetime\" target=\"_blank\">react-datetime</Card.Link> documentation.</p>\n          }\n          scope={{ Datetime, Form, InputGroup, FontAwesomeIcon, faCalendarAlt, moment }}\n          imports={`import React, { useState } from \"react\";\nimport { Form, InputGroup } from '@themesberg/react-bootstrap';\nimport Datetime from \"react-datetime\";\nimport moment from \"moment-timezone\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCalendarAlt } from \"@fortawesome/free-solid-svg-icons\";`}\n          example={`const Datepicker = () => {\n  const [birthday, setBirthday] = React.useState(\"\");\n\n  return(\n    <Form>\n      <Form.Group className=\"mb-3\">\n        <Datetime\n          timeFormat={false}\n          closeOnSelect={false}\n          onChange={setBirthday}\n          renderInput={(props, openCalendar) => (\n            <InputGroup>\n              <InputGroup.Text><FontAwesomeIcon icon={faCalendarAlt} /></InputGroup.Text>\n              <Form.Control\n                required\n                type=\"text\"\n                value={birthday ? moment(birthday).format(\"MM/DD/YYYY\") : \"\"}\n                placeholder=\"mm/dd/yyyy\"\n                onFocus={openCalendar}\n                onChange={() => { }} />\n            </InputGroup>\n          )} />\n      </Form.Group>\n    </Form>\n  );\n}\n\nrender( <Datepicker /> )`}\n        />\n\n      </Container>\n    </article>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}