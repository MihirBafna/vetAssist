{"ast":null,"code":"var _jsxFileName = \"/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/components/CodeEditor.js\";\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Col, Row, Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\nimport Code from \"./Code\";\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\nexport default (props => {\n  const {\n    language = \"jsx\",\n    scope = {},\n    imports = null,\n    maxHeight = 'none'\n  } = props;\n  const [code, setCode] = useState(props.code);\n  const [copied, setCopied] = useState(false);\n  const noInline = code.includes('render(');\n\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n  };\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return /*#__PURE__*/React.createElement(LiveProvider, {\n    noInline: noInline,\n    code: code,\n    language: language,\n    theme: themeStyle,\n    scope: scope,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      maxHeight: maxHeight\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LivePreview, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  })))), imports ? /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Code, {\n    code: imports,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  })) : null, /*#__PURE__*/React.createElement(Col, {\n    xs: 12,\n    className: \"mb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(LiveError, {\n    className: \"alert alert-danger\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"fs-7 mb-2 d-block text-gray-600\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: ['hover', 'focus'],\n    placement: \"top\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 83\n      }\n    }, \"You can edit the code below and the changes will be seen in the example above.\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faQuestionCircle,\n    className: \"me-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  })), \"Live React Code Editor\"), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    className: \"position-relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(LiveEditor, {\n    onChange: handleCodeChange,\n    className: \"live-editor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }), copied ? /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-success copy-code-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, \"Copied\") : null, /*#__PURE__*/React.createElement(OverlayTrigger, {\n    trigger: ['hover', 'focus'],\n    placement: \"top\",\n    overlay: /*#__PURE__*/React.createElement(Tooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 26\n      }\n    }, \"Copy to clipboard\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CopyToClipboard, {\n    text: code,\n    onCopy: handleCopy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    size: \"sm\",\n    variant: \"primary\",\n    className: \"copy-code-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 19\n    }\n  }, \"Copy\"))))))));\n});","map":{"version":3,"sources":["/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/components/CodeEditor.js"],"names":["React","useState","CopyToClipboard","Col","Row","Card","Button","Tooltip","OverlayTrigger","LiveProvider","LiveEditor","LiveError","LivePreview","FontAwesomeIcon","faQuestionCircle","Code","themeStyle","props","language","scope","imports","maxHeight","code","setCode","copied","setCopied","noInline","includes","handleCodeChange","newCode","handleCopy","setTimeout"],"mappings":"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","sourcesContent":["\nimport React, { useState } from 'react';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { Col, Row, Card, Button, Tooltip, OverlayTrigger } from '@themesberg/react-bootstrap';\nimport { LiveProvider, LiveEditor, LiveError, LivePreview } from 'react-live';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faQuestionCircle } from '@fortawesome/free-regular-svg-icons';\nimport Code from \"./Code\";\n\nimport themeStyle from \"../assets/syntax-themes/ghcolors.json\";\n\nexport default (props) => {\n  const { language = \"jsx\", scope = {}, imports = null, maxHeight = 'none' } = props;\n  const [code, setCode] = useState(props.code);\n  const [copied, setCopied] = useState(false);\n  const noInline = code.includes('render(');\n\n  const handleCodeChange = (newCode) => {\n    setCode(newCode);\n  };\n\n  const handleCopy = () => {\n    setCopied(true);\n    setTimeout(() => setCopied(false), 2000);\n  };\n\n  return (\n    <LiveProvider noInline={noInline} code={code} language={language} theme={themeStyle} scope={scope}>\n      <Row>\n        <Col xs={12} className=\"mb-4\">\n          <Card>\n            <Card.Body style={{ maxHeight: maxHeight }}>\n              <LivePreview />\n            </Card.Body>\n          </Card>\n        </Col>\n        {imports ? (\n          <Col xs={12} className=\"mb-4\">\n            <Code code={imports} />\n          </Col>\n        ) : null}\n        <Col xs={12} className=\"mb-4\">\n          <LiveError className=\"alert alert-danger\" />\n\n          <span className=\"fs-7 mb-2 d-block text-gray-600\">\n            <OverlayTrigger trigger={['hover', 'focus']} placement=\"top\" overlay={<Tooltip>You can edit the code below and the changes will be seen in the example above.</Tooltip>}>\n              <FontAwesomeIcon icon={faQuestionCircle} className=\"me-2\" />\n            </OverlayTrigger>\n            Live React Code Editor\n          </span>\n\n          <Card>\n            <Card.Body className=\"position-relative\">\n\n              <LiveEditor onChange={handleCodeChange} className=\"live-editor\" />\n\n              {copied ? <span className=\"text-success copy-code-text\">Copied</span> : null}\n\n              <OverlayTrigger\n                trigger={['hover', 'focus']}\n                placement=\"top\"\n                overlay={<Tooltip>Copy to clipboard</Tooltip>}\n              >\n                <CopyToClipboard text={code} onCopy={handleCopy}>\n                  <Button size=\"sm\" variant=\"primary\" className=\"copy-code-button\">Copy</Button>\n                </CopyToClipboard>\n              </OverlayTrigger>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </LiveProvider>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}