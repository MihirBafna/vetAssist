{"ast":null,"code":"var _jsxFileName = \"/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/components/Progress.js\";\nimport React from \"react\";\nimport { ProgressBar } from '@themesberg/react-bootstrap';\nexport default (props => {\n  const {\n    label,\n    variant,\n    value,\n    type = \"label\",\n    size = \"md\"\n  } = props;\n  const finalValue = value ? value : Math.floor(Math.random() * (Math.floor(100) - 20 + 1)) + 20; // generates a random number between 20 and 100\n\n  const textColor = type === \"label\" ? variant : \"white\";\n  const bgColorClass = type === \"tooltip\" ? `bg-${variant}` : \"\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `progress-${type} text-${textColor} ${bgColorClass}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-percentage\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }, finalValue, \"%\"))), /*#__PURE__*/React.createElement(ProgressBar, {\n    className: `progress-${size}`,\n    variant: variant,\n    now: finalValue,\n    min: 0,\n    max: 100,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/components/Progress.js"],"names":["React","ProgressBar","props","label","variant","value","type","size","finalValue","Math","floor","random","textColor","bgColorClass"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,gBAAgBC,KAAD,IAAW;AACxB,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA,OAAT;AAAkBC,IAAAA,KAAlB;AAAyBC,IAAAA,IAAI,GAAG,OAAhC;AAAyCC,IAAAA,IAAI,GAAG;AAAhD,MAAyDL,KAA/D;AACA,QAAMM,UAAU,GAAGH,KAAK,GAAGA,KAAH,GAAWI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBF,IAAI,CAACC,KAAL,CAAW,GAAX,IAAkB,EAAlB,GAAuB,CAAxC,CAAX,IAAyD,EAA5F,CAFwB,CAEwE;;AAChG,QAAME,SAAS,GAAGN,IAAI,KAAK,OAAT,GAAmBF,OAAnB,GAA6B,OAA/C;AACA,QAAMS,YAAY,GAAGP,IAAI,KAAK,SAAT,GAAsB,MAAKF,OAAQ,EAAnC,GAAuC,EAA5D;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAG,YAAWE,IAAK,SAAQM,SAAU,IAAGC,YAAa,EAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,KADH,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOK,UAAP,MADF,CAJF,CADF,eASE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAG,YAAWD,IAAK,EAAzC;AAA4C,IAAA,OAAO,EAAEH,OAArD;AAA8D,IAAA,GAAG,EAAEI,UAAnE;AAA+E,IAAA,GAAG,EAAE,CAApF;AAAuF,IAAA,GAAG,EAAE,GAA5F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF;AAaD,CAnBD","sourcesContent":["import React from \"react\";\nimport { ProgressBar } from '@themesberg/react-bootstrap';\n\nexport default (props) => {\n  const { label, variant, value, type = \"label\", size = \"md\" } = props;\n  const finalValue = value ? value : Math.floor(Math.random() * (Math.floor(100) - 20 + 1)) + 20; // generates a random number between 20 and 100\n  const textColor = type === \"label\" ? variant : \"white\";\n  const bgColorClass = type === \"tooltip\" ? `bg-${variant}` : \"\";\n\n  return (\n    <div className=\"progress-wrapper\">\n      <div className=\"progress-info\">\n        <div className={`progress-${type} text-${textColor} ${bgColorClass}`}>\n          {label}\n        </div>\n        <div className=\"progress-percentage\">\n          <span>{finalValue}%</span>\n        </div>\n      </div>\n      <ProgressBar className={`progress-${size}`} variant={variant} now={finalValue} min={0} max={100} />\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}