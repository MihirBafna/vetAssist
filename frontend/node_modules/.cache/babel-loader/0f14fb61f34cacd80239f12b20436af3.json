{"ast":null,"code":"var _jsxFileName = \"/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/components/Progress.js\";\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\nexport default (() => /*#__PURE__*/React.createElement(\"article\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(Container, {\n  className: \"px-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(Row, {\n  className: \"d-flex flex-wrap flex-md-nowrap align-items-center py-4\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  className: \"d-block mb-4 mb-md-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  className: \"h2\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 11\n  }\n}, \"Progress\"), /*#__PURE__*/React.createElement(\"p\", {\n  className: \"mb-0\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 11\n  }\n}, \"Use progress bars to indicate percentage based components.\"))), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Example\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"Use the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 22\n    }\n  }, \"<Progress>\"), \" component to show progress bars or loaders for your app. You can set the value of the bar using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 156\n    }\n  }, \"value\"), \" attribute. You can also change the appearance using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 231\n    }\n  }, \"variant=\\\"*\\\"\"), \" attributes using the default Bootstrap color classes, such as \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 318\n    }\n  }, \"primary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 340\n    }\n  }, \"secondary\"), \", \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 364\n    }\n  }, \"danger\"), \" and so on.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<Progress variant=\"primary\" label=\"Primary color\" value={25} />`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Color variations\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, \"To update the appearance of the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 46\n    }\n  }, \"<Progress>\"), \" component you can use the following classes for the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 132\n    }\n  }, \"variant\"), \" attribute. You can also add a label text using the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 204\n    }\n  }, \"label=\\\"lorem ipsum\\\"\"), \" attribute.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }\n}), /*#__PURE__*/React.createElement(Documentation, {\n  title: \"Sizing\",\n  description: /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"You can also use one of the four available sizes for the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 71\n    }\n  }, \"<Progress>\"), \" updating the \", /*#__PURE__*/React.createElement(\"code\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 118\n    }\n  }, \"size=\\\"*\\\"\"), \" attribute.\"),\n  scope: {\n    Progress\n  },\n  imports: `import Progress from \"src/components/Progress\";`,\n  example: `<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 7\n  }\n}))));","map":{"version":3,"sources":["/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/components/Progress.js"],"names":["React","Col","Row","Container","Documentation","Progress"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,SAAnB,QAAoC,6BAApC;AAEA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,QAAP,MAAqB,2BAArB;AAEA,gBAAe,mBACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,SAAD;AAAW,EAAA,SAAS,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAK,EAAA,SAAS,EAAC,yDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAK,EAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAI,EAAA,SAAS,EAAC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAG,EAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gEAFF,CADF,CADF,eAUE,oBAAC,aAAD;AACE,EAAA,KAAK,EAAC,SADR;AAEE,EAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,wHAAiJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAjJ,4EAA4N;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA5N,kFAAmT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAnT,qBAAyU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAzU,qBAAiW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAjW,gBAHJ;AAKE,EAAA,KAAK,EAAE;AAAEA,IAAAA;AAAF,GALT;AAME,EAAA,OAAO,EAAG,iDANZ;AAOE,EAAA,OAAO,EAAG,iEAPZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAVF,eAoBE,oBAAC,aAAD;AACE,EAAA,KAAK,EAAC,kBADR;AAEE,EAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sDAAmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnC,wEAAyH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAzH,uEAAiM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAjM,gBAHJ;AAKE,EAAA,KAAK,EAAE;AAAEA,IAAAA;AAAF,GALT;AAME,EAAA,OAAO,EAAG,iDANZ;AAOE,EAAA,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AACA,kBAdM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EApBF,eAqCE,oBAAC,aAAD;AACE,EAAA,KAAK,EAAC,QADR;AAEE,EAAA,WAAW,eACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+EAA4D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA5D,iCAA2G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3G,gBAHJ;AAKE,EAAA,KAAK,EAAE;AAAEA,IAAAA;AAAF,GALT;AAME,EAAA,OAAO,EAAG,iDANZ;AAOE,EAAA,OAAO,EAAG;AAClB;AACA;AACA;AACA;AACA,kBAZM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EArCF,CADF,CADF","sourcesContent":["\nimport React from 'react';\nimport { Col, Row, Container } from '@themesberg/react-bootstrap';\n\nimport Documentation from \"../../components/Documentation\";\nimport Progress from \"../../components/Progress\";\n\nexport default () => (\n  <article>\n    <Container className=\"px-0\">\n      <Row className=\"d-flex flex-wrap flex-md-nowrap align-items-center py-4\">\n        <Col className=\"d-block mb-4 mb-md-0\">\n          <h1 className=\"h2\">Progress</h1>\n          <p className=\"mb-0\">\n            Use progress bars to indicate percentage based components.\n          </p>\n        </Col>\n      </Row>\n\n      <Documentation\n        title=\"Example\"\n        description={\n          <p>Use the <code>&#x3C;Progress&#x3E;</code> component to show progress bars or loaders for your app. You can set the value of the bar using the <code>value</code> attribute. You can also change the appearance using the <code>variant=\"*\"</code> attributes using the default Bootstrap color classes, such as <code>primary</code>, <code>secondary</code>, <code>danger</code> and so on.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<Progress variant=\"primary\" label=\"Primary color\" value={25} />`}\n      />\n\n      <Documentation\n        title=\"Color variations\"\n        description={\n          <p>To update the appearance of the <code>&#x3C;Progress&#x3E;</code> component you can use the following classes for the <code>variant</code> attribute. You can also add a label text using the <code>label=\"lorem ipsum\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"secondary\" label=\"Secondary color\" />\n  <Progress variant=\"tertiary\" label=\"Tertiary color\" />\n  <Progress variant=\"dark\" label=\"Dark color\" />\n  <Progress variant=\"success\" label=\"Success color\" />\n  <Progress variant=\"info\" label=\"Info color\" />\n  <Progress variant=\"danger\" label=\"Danger color\" />\n</React.Fragment>`}\n      />\n\n      <Documentation\n        title=\"Sizing\"\n        description={\n          <p>You can also use one of the four available sizes for the <code>&#x3C;Progress&#x3E;</code> updating the <code>size=\"*\"</code> attribute.</p>\n        }\n        scope={{ Progress }}\n        imports={`import Progress from \"src/components/Progress\";`}\n        example={`<React.Fragment>\n  <Progress variant=\"primary\" label=\"XL Progress Bar\" size=\"xl\" />\n  <Progress variant=\"secondary\" label=\"LG Progress Bar\" size=\"lg\" />\n  <Progress variant=\"tertiary\" label=\"MD Progress Bar\" size=\"md\" />\n  <Progress variant=\"info\" label=\"SM Progress Bar\" size=\"sm\" />\n</React.Fragment>`}\n      />\n    </Container>\n  </article>\n);\n"]},"metadata":{},"sourceType":"module"}