{"ast":null,"code":"var _jsxFileName = \"/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/JournalPage.js\";\nimport React from \"react\";\nimport { Col, Row, Button, Dropdown, ButtonGroup, Card, ListGroup } from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp, faChartArea, faChartBar, faChartLine, faFlagUsa, faFolderOpen, faGlobeEurope, faPaperclip, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/JournalPage.css';\nimport { useEffect, useState } from 'react';\nconst [journalEntries, setJournalEntries] = useState([]);\nconst [dashboardElem, setDashboardElem] = useState(null);\n\nlet oppContent = props => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"h1\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 21\n  }\n}, props.opp[\"opportunity_name\"]), /*#__PURE__*/React.createElement(Button, {\n  variant: \"primary\",\n  target: \"_blank\",\n  rel: \"noopener noreferrer\",\n  href: props.email.includes(\"@gmail.com\") ? `https://mail.google.com/mail/?view=cm&fs=1&to=hello@lanos.io&su=Question+About+${props.opp[\"opportunity_name\"]}` : \"mailto:hello@lanos.io\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 21\n  }\n}, \"Contact Us\")), /*#__PURE__*/React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 17\n  }\n}, /*#__PURE__*/React.createElement(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 21\n  }\n}, /*#__PURE__*/React.createElement(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 25\n  }\n}, \"Date Posted: \"), props, /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 25\n  }\n}), /*#__PURE__*/React.createElement(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 25\n  }\n}, \"When: \"), /*#__PURE__*/React.createElement(\"br\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 25\n  }\n}), /*#__PURE__*/React.createElement(\"b\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 25\n  }\n}, \"Location: \"), props))), /*#__PURE__*/React.createElement(\"hr\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 13\n  }\n}), /*#__PURE__*/React.createElement(Row, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 13\n  }\n}, /*#__PURE__*/React.createElement(Col, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 17\n  }\n})));\n\nuseEffect(async () => {\n  if (opportunityNamesDB.length == 0) {\n    await fetch(``).then(response => response.json()).then(result => {\n      console.log(result['message']);\n      setJournalEntries(result['message']); // setDashboardElem(opportunityNamesDB[0])\n    });\n  }\n}, []);\nconst listItems = journalEntryNames.map((opp, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n  href: \"#link\" + index,\n  className: \"listitem\",\n  onClick: e => openDashboard(e, index),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }\n}, journalEntry.title));\n\nlet openDashboard = (e, index) => {\n  e.preventDefault();\n  setDashboardElem(journalEntries[index]);\n};\n\nexport default (() => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    sm: 4,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"light\",\n    className: \"shadow-sm \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 33\n    }\n  }, \"Previous Journals\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"listitem\",\n    flush: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 33\n    }\n  }, \"Entry 12: 3/13/21\"), /*#__PURE__*/React.createElement(ListGroup.Item, {\n    className: \"listitem\",\n    flush: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, \"Entry 11: 3/12/21\")))), /*#__PURE__*/React.createElement(Col, {\n    sm: 8,\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    border: \"light\",\n    className: \"shadow-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 33\n    }\n  }, \"Selected\"), /*#__PURE__*/React.createElement(ListGroup, {\n    variant: \"flush\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 33\n    }\n  }))))));\n});","map":{"version":3,"sources":["/Users/MihirBafna/Downloads/volt-react-dashboard-v1.0.0/src/pages/JournalPage.js"],"names":["React","Col","Row","Button","Dropdown","ButtonGroup","Card","ListGroup","FontAwesomeIcon","faAngleDown","faAngleUp","faChartArea","faChartBar","faChartLine","faFlagUsa","faFolderOpen","faGlobeEurope","faPaperclip","faUserPlus","useEffect","useState","journalEntries","setJournalEntries","dashboardElem","setDashboardElem","oppContent","props","opp","email","includes","opportunityNamesDB","length","fetch","then","response","json","result","console","log","listItems","journalEntryNames","map","index","e","openDashboard","journalEntry","title","preventDefault"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Col, Row, Button, Dropdown, ButtonGroup, Card, ListGroup} from '@themesberg/react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faAngleDown, faAngleUp, faChartArea, faChartBar, faChartLine, faFlagUsa, faFolderOpen, faGlobeEurope, faPaperclip, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport '../styles/JournalPage.css'\nimport {useEffect, useState} from 'react'\n\n\nconst [journalEntries, setJournalEntries] = useState([])\nconst [dashboardElem, setDashboardElem] = useState(null)\n\nlet oppContent = (props) => (\n        <>\n            <Row>\n                <Col>\n                    <h1>{props.opp[\"opportunity_name\"]}</h1>\n                    <Button variant=\"primary\" target=\"_blank\" rel=\"noopener noreferrer\" href={props.email.includes(\"@gmail.com\") ? `https://mail.google.com/mail/?view=cm&fs=1&to=hello@lanos.io&su=Question+About+${props.opp[\"opportunity_name\"]}` :\"mailto:hello@lanos.io\"}>Contact Us</Button>\n                </Col>\n                <Col>\n                    <p>\n                        <b>Date Posted: </b>{props}\n                        <br/>\n                        <b>When: </b>\n                        <br/>\n                        <b>Location: </b>{props}\n                    </p>\n                </Col>\n                \n            </Row>\n            <hr/>\n            <Row>\n                <Col>\n                </Col>\n            </Row>\n        </>\n    )\n\nuseEffect(async () => {\n    if( opportunityNamesDB.length == 0){\n    await fetch(``)\n    .then(response => response.json())\n    .then(result => {\n        console.log(result['message'])\n        setJournalEntries(result['message'])\n        // setDashboardElem(opportunityNamesDB[0])\n    }\n    )\n}\n},[])\nconst listItems = journalEntryNames.map((opp, index) =>\n    <ListGroup.Item href={\"#link\"+index} className=\"listitem\" onClick={(e) => openDashboard(e,index)}>\n        {journalEntry.title}\n    </ListGroup.Item>\n);\n\nlet openDashboard = (e, index) => {\n    e.preventDefault()\n    setDashboardElem(journalEntries[index]) \n\n}\n\n\n\nexport default () => {\n    return(\n        <>\n            <Row className=\"\">\n                <Col sm={4} className=\"\">\n                    <Card border=\"light\" className=\"shadow-sm \">\n                        <Card.Body>\n                                <h3>Previous Journals</h3>\n                                <ListGroup.Item className=\"listitem\" flush>\n                                    Entry 12: 3/13/21\n                                </ListGroup.Item>\n                                <ListGroup.Item className=\"listitem\" flush>\n                                    Entry 11: 3/12/21\n                                </ListGroup.Item>\n                        </Card.Body>\n                    </Card>\n                </Col>\n                <Col sm={8} className=\"\">\n                    <Card border=\"light\" className=\"shadow-sm\">\n                        <Card.Body>\n                                <h3>Selected</h3>\n                                <ListGroup variant=\"flush\">\n\n                                </ListGroup>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    );\n}"]},"metadata":{},"sourceType":"module"}