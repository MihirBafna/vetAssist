{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport function useAccordionButton(eventKey, onClick) {\n  var _useContext = useContext(AccordionContext),\n      activeEventKey = _useContext.activeEventKey,\n      onSelect = _useContext.onSelect;\n\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"children\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n\n  var _useContext2 = useContext(AccordionItemContext),\n      eventKey = _useContext2.eventKey;\n\n  var accordionOnClick = useAccordionButton(eventKey, onClick);\n\n  var _useContext3 = useContext(AccordionContext),\n      activeEventKey = _useContext3.activeEventKey;\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props, {\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  }), children);\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;","map":{"version":3,"sources":["/Users/MihirBafna/Documents/CS/Projects/vetAssist/frontend/node_modules/@themesberg/react-bootstrap/lib/esm/AccordionButton.js"],"names":["_extends","_objectWithoutPropertiesLoose","React","useContext","classNames","AccordionContext","AccordionItemContext","useBootstrapPrefix","useAccordionButton","eventKey","onClick","_useContext","activeEventKey","onSelect","e","eventKeyPassed","AccordionButton","forwardRef","_ref","ref","_ref$as","as","Component","bsPrefix","className","children","props","_useContext2","accordionOnClick","_useContext3","type","createElement","displayName"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,6BAAP,MAA0C,yDAA1C;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,SAASC,kBAAT,QAAmC,iBAAnC;AACA,OAAO,SAASC,kBAAT,CAA4BC,QAA5B,EAAsCC,OAAtC,EAA+C;AACpD,MAAIC,WAAW,GAAGR,UAAU,CAACE,gBAAD,CAA5B;AAAA,MACIO,cAAc,GAAGD,WAAW,CAACC,cADjC;AAAA,MAEIC,QAAQ,GAAGF,WAAW,CAACE,QAF3B;;AAIA,SAAO,UAAUC,CAAV,EAAa;AAClB;AACJ;AACA;AACA;AACI,QAAIC,cAAc,GAAGN,QAAQ,KAAKG,cAAb,GAA8B,IAA9B,GAAqCH,QAA1D;AACA,QAAII,QAAJ,EAAcA,QAAQ,CAACE,cAAD,EAAiBD,CAAjB,CAAR;AACd,QAAIJ,OAAJ,EAAaA,OAAO,CAACI,CAAD,CAAP;AACd,GARD;AASD;AACD,IAAIE,eAAe,GAAG,aAAad,KAAK,CAACe,UAAN,CAAiB,UAAUC,IAAV,EAAgBC,GAAhB,EAAqB;AACvE,MAAIC,OAAO,GAAGF,IAAI,CAACG,EAAnB;AAAA,MACIC,SAAS,GAAGF,OAAO,KAAK,KAAK,CAAjB,GAAqB,QAArB,GAAgCA,OADhD;AAAA,MAEIG,QAAQ,GAAGL,IAAI,CAACK,QAFpB;AAAA,MAGIC,SAAS,GAAGN,IAAI,CAACM,SAHrB;AAAA,MAIIC,QAAQ,GAAGP,IAAI,CAACO,QAJpB;AAAA,MAKIf,OAAO,GAAGQ,IAAI,CAACR,OALnB;AAAA,MAMIgB,KAAK,GAAGzB,6BAA6B,CAACiB,IAAD,EAAO,CAAC,IAAD,EAAO,UAAP,EAAmB,WAAnB,EAAgC,UAAhC,EAA4C,SAA5C,CAAP,CANzC;;AAQAK,EAAAA,QAAQ,GAAGhB,kBAAkB,CAACgB,QAAD,EAAW,kBAAX,CAA7B;;AAEA,MAAII,YAAY,GAAGxB,UAAU,CAACG,oBAAD,CAA7B;AAAA,MACIG,QAAQ,GAAGkB,YAAY,CAAClB,QAD5B;;AAGA,MAAImB,gBAAgB,GAAGpB,kBAAkB,CAACC,QAAD,EAAWC,OAAX,CAAzC;;AAEA,MAAImB,YAAY,GAAG1B,UAAU,CAACE,gBAAD,CAA7B;AAAA,MACIO,cAAc,GAAGiB,YAAY,CAACjB,cADlC;;AAGA,MAAIU,SAAS,KAAK,QAAlB,EAA4B;AAC1BI,IAAAA,KAAK,CAACI,IAAN,GAAa,QAAb;AACD;;AAED,SAAO,aAAa5B,KAAK,CAAC6B,aAAN,CAAoBT,SAApB,EAA+BtB,QAAQ,CAAC;AAC1DmB,IAAAA,GAAG,EAAEA,GADqD;AAE1DT,IAAAA,OAAO,EAAEkB;AAFiD,GAAD,EAGxDF,KAHwD,EAGjD;AACR,qBAAiBjB,QAAQ,KAAKG,cADtB;AAERY,IAAAA,SAAS,EAAEpB,UAAU,CAACoB,SAAD,EAAYD,QAAZ,EAAsBd,QAAQ,KAAKG,cAAb,IAA+B,WAArD;AAFb,GAHiD,CAAvC,EAMhBa,QANgB,CAApB;AAOD,CA9BkC,CAAnC;AA+BAT,eAAe,CAACgB,WAAhB,GAA8B,iBAA9B;AACA,eAAehB,eAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useContext } from 'react';\nimport classNames from 'classnames';\nimport AccordionContext from './AccordionContext';\nimport AccordionItemContext from './AccordionItemContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nexport function useAccordionButton(eventKey, onClick) {\n  var _useContext = useContext(AccordionContext),\n      activeEventKey = _useContext.activeEventKey,\n      onSelect = _useContext.onSelect;\n\n  return function (e) {\n    /*\n      Compare the event key in context with the given event key.\n      If they are the same, then collapse the component.\n    */\n    var eventKeyPassed = eventKey === activeEventKey ? null : eventKey;\n    if (onSelect) onSelect(eventKeyPassed, e);\n    if (onClick) onClick(e);\n  };\n}\nvar AccordionButton = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'button' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      children = _ref.children,\n      onClick = _ref.onClick,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"className\", \"children\", \"onClick\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'accordion-button');\n\n  var _useContext2 = useContext(AccordionItemContext),\n      eventKey = _useContext2.eventKey;\n\n  var accordionOnClick = useAccordionButton(eventKey, onClick);\n\n  var _useContext3 = useContext(AccordionContext),\n      activeEventKey = _useContext3.activeEventKey;\n\n  if (Component === 'button') {\n    props.type = 'button';\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    onClick: accordionOnClick\n  }, props, {\n    \"aria-expanded\": eventKey === activeEventKey,\n    className: classNames(className, bsPrefix, eventKey !== activeEventKey && 'collapsed')\n  }), children);\n});\nAccordionButton.displayName = 'AccordionButton';\nexport default AccordionButton;"]},"metadata":{},"sourceType":"module"}